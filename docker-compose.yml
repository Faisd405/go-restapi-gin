version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: restaurant_postgres
    environment:
      POSTGRES_DB: restaurant_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - restaurant_network

  # Restaurant API
  api:
    build: .
    container_name: restaurant_api
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: restaurant_db
      DB_SSLMODE: disable
      SERVER_HOST: 0.0.0.0
      SERVER_PORT: 8080
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      JWT_EXPIRE_HOURS: 24
      APP_ENV: development
      APP_NAME: Restaurant API
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - restaurant_network
    volumes:
      - .:/app
    restart: unless-stopped

  # pgAdmin (Optional - for database management)
  pgadmin:
    image: dpage/pgadmin4
    container_name: restaurant_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - restaurant_network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  restaurant_network:
    driver: bridge
